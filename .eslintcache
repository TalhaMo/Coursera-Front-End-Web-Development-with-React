[{"D:\\coursera\\react\\react\\confusion\\src\\index.js":"1","D:\\coursera\\react\\react\\confusion\\src\\App.js":"2","D:\\coursera\\react\\react\\confusion\\src\\reportWebVitals.js":"3","D:\\coursera\\react\\react\\confusion\\src\\components\\MenuComponent.js":"4","D:\\coursera\\react\\react\\confusion\\src\\shared\\dishes.js":"5","D:\\coursera\\react\\react\\confusion\\src\\components\\DishdetailComponent.js":"6","D:\\coursera\\react\\react\\confusion\\src\\components\\MainComponent.js":"7","D:\\coursera\\react\\react\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\coursera\\react\\react\\confusion\\src\\components\\FooterComponent.js":"9","D:\\coursera\\react\\react\\confusion\\src\\components\\HomeComponent.js":"10","D:\\coursera\\react\\react\\confusion\\src\\components\\ContactComponent.js":"11","D:\\coursera\\react\\react\\confusion\\src\\shared\\comments.js":"12","D:\\coursera\\react\\react\\confusion\\src\\shared\\promotions.js":"13","D:\\coursera\\react\\react\\confusion\\src\\shared\\leaders.js":"14","D:\\coursera\\react\\react\\confusion\\src\\components\\AboutComponent.js":"15","D:\\coursera\\react\\react\\confusion\\src\\redux\\configureStore.js":"16","D:\\coursera\\react\\react\\confusion\\src\\redux\\reducer.js":"17"},{"size":639,"mtime":1612795491611,"results":"18","hashOfConfig":"19"},{"size":487,"mtime":1612907199170,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1612290199179,"results":"21","hashOfConfig":"19"},{"size":1576,"mtime":1612811335386,"results":"22","hashOfConfig":"19"},{"size":1490,"mtime":1612805992881,"results":"23","hashOfConfig":"19"},{"size":2448,"mtime":1612813125397,"results":"24","hashOfConfig":"19"},{"size":1751,"mtime":1612909732805,"results":"25","hashOfConfig":"19"},{"size":5118,"mtime":1612896363623,"results":"26","hashOfConfig":"19"},{"size":2639,"mtime":1612802519796,"results":"27","hashOfConfig":"19"},{"size":1112,"mtime":1612806195432,"results":"28","hashOfConfig":"19"},{"size":9581,"mtime":1612888836516,"results":"29","hashOfConfig":"19"},{"size":4280,"mtime":1612806050407,"results":"30","hashOfConfig":"19"},{"size":445,"mtime":1612806089761,"results":"31","hashOfConfig":"19"},{"size":2382,"mtime":1612806117605,"results":"32","hashOfConfig":"19"},{"size":4118,"mtime":1612823614893,"results":"33","hashOfConfig":"19"},{"size":262,"mtime":1612905828948,"results":"34","hashOfConfig":"19"},{"size":405,"mtime":1612905557182,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1nlgj47",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\coursera\\react\\react\\confusion\\src\\index.js",[],["72","73"],"D:\\coursera\\react\\react\\confusion\\src\\App.js",[],"D:\\coursera\\react\\react\\confusion\\src\\reportWebVitals.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\MenuComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\shared\\dishes.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\DishdetailComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\MainComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\FooterComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\HomeComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\ContactComponent.js",["74"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      telnum: \"\",\r\n      email: \"\",\r\n      agree: false,\r\n      contactType: \"Tel.\",\r\n      message: \"\",\r\n      touched: {\r\n        firstname: false,\r\n        lastname: false,\r\n        telnum: false,\r\n        email: false,\r\n      },\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleBlur=this.handleBlur.bind(this);\r\n \r\n  }\r\n\r\n  //hanldeBlur function is declared\r\n\r\n  handleBlur = (field) => (evt) => {\r\n    this.setState({\r\n      touched: { ...this.state.touched, [field]: true },\r\n    });\r\n  };\r\n\r\n  validate(firstname, lastname, telnum, email) {\r\n    const errors = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      telnum: \"\",\r\n      email: \"\",\r\n    };\r\n\r\n    if (this.state.touched.firstname && firstname.length < 3) errors.firstname = \"First Name should be >= 3 characters\";\r\n    else if (this.state.touched.firstname && firstname.length > 10) errors.firstname = \"First Name should be <= 10 characters\";\r\n\r\n    if (this.state.touched.lastname && lastname.length < 3) errors.lastname = \"Last Name should be >= 3 characters\";\r\n    else if (this.state.touched.lastname && lastname.length > 10) errors.lastname = \"Last Name should be <= 10 characters\";\r\n\r\n    const reg = /^\\d+$/;\r\n    if (this.state.touched.telnum && !reg.test(telnum)) errors.telnum = \"Tel. Number shoould contains only numbers\";\r\n\r\n    if (this.state.touched.email && email.split(\"\").filter((x) => x === \"@\").length !== 1) errors.email = \"Email should contain @\";\r\n\r\n    return errors;\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    console.log(\"Current state is: \" + JSON.stringify(this.state));\r\n    alert(\"Current state is: \" + JSON.stringify(this.state));\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem>\r\n                <Link to=\"/home\">Home</Link>\r\n              </BreadcrumbItem>\r\n              <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n              <h3>Contact Us</h3>\r\n              <hr />\r\n            </div>\r\n          </div>\r\n          <div className=\"row row-content\">\r\n            <div className=\"col-12\">\r\n              <h3>Location Information</h3>\r\n            </div>\r\n            <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n              <h5>Our Address</h5>\r\n              <address>\r\n                121, Clear Water Bay Road\r\n                <br />\r\n                Clear Water Bay, Kowloon\r\n                <br />\r\n                HONG KONG\r\n                <br />\r\n                <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n                <br />\r\n                <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n                <br />\r\n                <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n              </address>\r\n            </div>\r\n            <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n              <h5>Map of our Location</h5>\r\n            </div>\r\n            <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n              <div className=\"btn-group\" role=\"group\">\r\n                <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\">\r\n                  <i className=\"fa fa-phone\"></i> Call\r\n                </a>\r\n                <a role=\"button\" className=\"btn btn-info\">\r\n                  <i className=\"fa fa-skype\"></i> Skype\r\n                </a>\r\n                <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\">\r\n                  <i className=\"fa fa-envelope-o\"></i> Email\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h3>Send us Your Feedback</h3>\r\n            </div>\r\n            <div className=\"col-12 col-md-9\">\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"firstname\" md={2}>\r\n                    First Name\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"firstname\"\r\n                      name=\"firstname\"\r\n                      placeholder=\"First Name\"\r\n                      value={this.state.firstname}\r\n                      valid={errors.firstname === \"\"}\r\n                      invalid={errors.firstname !== \"\"}\r\n                      onBlur={this.handleBlur(\"firstname\")} //hanldeBlur function is called\r\n                      onChange={this.handleInputChange}\r\n                    />\r\n                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"lastname\" md={2}>\r\n                    Last Name\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"lastname\"\r\n                      name=\"lastname\"\r\n                      placeholder=\"Last Name\"\r\n                      value={this.state.lastname}\r\n                      valid={errors.lastname === \"\"}\r\n                      invalid={errors.lastname !== \"\"}\r\n                      onBlur={this.handleBlur(\"lastname\")} //hanldeBlur function is called\r\n                      onChange={this.handleInputChange}\r\n                    />\r\n                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"telnum\" md={2}>\r\n                    Contact Tel.\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Input\r\n                      type=\"tel\"\r\n                      id=\"telnum\"\r\n                      name=\"telnum\"\r\n                      placeholder=\"Tel. Number\"\r\n                      value={this.state.telnum}\r\n                      valid={errors.telnum === \"\"}\r\n                      invalid={errors.telnum !== \"\"}\r\n                      onBlur={this.handleBlur(\"telnum\")} //hanldeBlur function is called\r\n                      onChange={this.handleInputChange}\r\n                    />\r\n                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"email\" md={2}>\r\n                    Email\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={this.state.email}\r\n                      valid={errors.email === \"\"}\r\n                      invalid={errors.email !== \"\"}\r\n                      onBlur={this.handleBlur(\"email\")} //hanldeBlur function is called\r\n                      onChange={this.handleInputChange}\r\n                    />\r\n                    <FormFeedback>{errors.email}</FormFeedback>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Col md={{ size: 6, offset: 2 }}>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input type=\"checkbox\" name=\"agree\" checked={this.state.agree} onChange={this.handleInputChange}></Input>{\" \"}\r\n                        <strong>May We Contact You?</strong>\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={{ size: 3, offset: 1 }}>\r\n                    <Input type=\"select\" name=\"contactType\" value={this.state.contactType} onChange={this.handleInputChange}>\r\n                      <option>Tel.</option>\r\n                      <option>Email</option>\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"message\" md={2}>\r\n                    Your Feedback\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Input type=\"textarea\" id=\"message\" name=\"message\" rows=\"12\" value={this.state.message} onChange={this.handleInputChange}></Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Col md={{ size: 10, offset: 2 }}>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                      Send Feedback\r\n                    </Button>\r\n                  </Col>\r\n                </FormGroup>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Contact","D:\\coursera\\react\\react\\confusion\\src\\shared\\comments.js",[],"D:\\coursera\\react\\react\\confusion\\src\\shared\\promotions.js",[],"D:\\coursera\\react\\react\\confusion\\src\\shared\\leaders.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\AboutComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\redux\\configureStore.js",[],"D:\\coursera\\react\\react\\confusion\\src\\redux\\reducer.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":122,"column":17,"nodeType":"81","endLine":122,"endColumn":59},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]