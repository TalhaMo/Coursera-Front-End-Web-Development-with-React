[{"D:\\coursera\\react\\react\\confusion\\src\\index.js":"1","D:\\coursera\\react\\react\\confusion\\src\\App.js":"2","D:\\coursera\\react\\react\\confusion\\src\\reportWebVitals.js":"3","D:\\coursera\\react\\react\\confusion\\src\\components\\MenuComponent.js":"4","D:\\coursera\\react\\react\\confusion\\src\\shared\\dishes.js":"5","D:\\coursera\\react\\react\\confusion\\src\\components\\DishdetailComponent.js":"6","D:\\coursera\\react\\react\\confusion\\src\\components\\MainComponent.js":"7","D:\\coursera\\react\\react\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\coursera\\react\\react\\confusion\\src\\components\\FooterComponent.js":"9","D:\\coursera\\react\\react\\confusion\\src\\components\\HomeComponent.js":"10","D:\\coursera\\react\\react\\confusion\\src\\components\\ContactComponent.js":"11","D:\\coursera\\react\\react\\confusion\\src\\shared\\comments.js":"12","D:\\coursera\\react\\react\\confusion\\src\\shared\\promotions.js":"13","D:\\coursera\\react\\react\\confusion\\src\\shared\\leaders.js":"14","D:\\coursera\\react\\react\\confusion\\src\\components\\AboutComponent.js":"15","D:\\coursera\\react\\react\\confusion\\src\\redux\\configureStore.js":"16","D:\\coursera\\react\\react\\confusion\\src\\redux\\dishes.js":"17","D:\\coursera\\react\\react\\confusion\\src\\redux\\comments.js":"18","D:\\coursera\\react\\react\\confusion\\src\\redux\\promotions.js":"19","D:\\coursera\\react\\react\\confusion\\src\\redux\\leaders.js":"20"},{"size":639,"mtime":1612795491611,"results":"21","hashOfConfig":"22"},{"size":487,"mtime":1612907199170,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1612290199179,"results":"24","hashOfConfig":"22"},{"size":1576,"mtime":1612811335386,"results":"25","hashOfConfig":"22"},{"size":1490,"mtime":1612805992881,"results":"26","hashOfConfig":"22"},{"size":5430,"mtime":1612979459825,"results":"27","hashOfConfig":"22"},{"size":1758,"mtime":1612980437324,"results":"28","hashOfConfig":"22"},{"size":5119,"mtime":1612966336825,"results":"29","hashOfConfig":"22"},{"size":2639,"mtime":1612802519796,"results":"30","hashOfConfig":"22"},{"size":1112,"mtime":1612806195432,"results":"31","hashOfConfig":"22"},{"size":10723,"mtime":1612980989761,"results":"32","hashOfConfig":"22"},{"size":4280,"mtime":1612806050407,"results":"33","hashOfConfig":"22"},{"size":445,"mtime":1612806089761,"results":"34","hashOfConfig":"22"},{"size":2382,"mtime":1612806117605,"results":"35","hashOfConfig":"22"},{"size":4118,"mtime":1612823614893,"results":"36","hashOfConfig":"22"},{"size":481,"mtime":1612981614723,"results":"37","hashOfConfig":"22"},{"size":216,"mtime":1612981217873,"results":"38","hashOfConfig":"22"},{"size":181,"mtime":1612981288184,"results":"39","hashOfConfig":"22"},{"size":197,"mtime":1612981402815,"results":"40","hashOfConfig":"22"},{"size":185,"mtime":1612981352734,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1nlgj47",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\coursera\\react\\react\\confusion\\src\\index.js",[],["87","88"],"D:\\coursera\\react\\react\\confusion\\src\\App.js",[],"D:\\coursera\\react\\react\\confusion\\src\\reportWebVitals.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\MenuComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\shared\\dishes.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\DishdetailComponent.js",["89","90","91","92","93"],"import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Row,\r\n  Label,\r\n  Col,\r\n  Button,\r\n  FormGroup\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.state = {\r\n      isModalOpen: false\r\n    };\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.toggleModal()\r\n    console.log(\"Current State is:\" + JSON.stringify(values));\r\n    alert(\"Current State is:\" + JSON.stringify(values));\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil fa-lg\" /> Submit Comment\r\n        </Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"rating\">Rating</Label>\r\n                <Control.select\r\n                  type=\"select\"\r\n                  model=\".rating\"\r\n                  name=\"rating\"\r\n                  id=\"rating\"\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                </Control.select>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"author\">Your Name</Label>\r\n                <Control.text\r\n                  name=\"author\"\r\n                  id=\"author\"\r\n                  model=\".author\"\r\n                  placeholder=\"Your Name\"\r\n                  className=\"form-control\"\r\n                  validators={{\r\n                    required,\r\n                    minLength: minLength(3),\r\n                    maxLength: maxLength(15)\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".author\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: \"Required\",\r\n                    minLength: \"Must be greater than 2 characters\",\r\n                    maxLength: \"Must be 15 characters or less\"\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"comment\">Comment</Label>\r\n                <Control.textarea\r\n                  rows=\"6\"\r\n                  name=\"comment\"\r\n                  id=\"comment\"\r\n                  model=\".comment\"\r\n                  className=\"form-control\"\r\n                />\r\n              </FormGroup>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction RenderComments({ comments }) {\r\n  if (comments !== null && comments.length !== 0) {\r\n    const commentsList = comments.map(comment => {\r\n      return (\r\n        <li>\r\n          <p>{comment.comment}</p>\r\n          <p>\r\n            -- {comment.author},\r\n            {new Intl.DateTimeFormat(\"en-US\", {\r\n              year: \"numeric\",\r\n              month: \"short\",\r\n              day: \"2-digit\"\r\n            }).format(new Date(Date.parse(comment.date)))}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <h4>Comments</h4>\r\n        <ul className=\"list-unstyled\">{commentsList}</ul>\r\n        <CommentForm />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n  return (\r\n    <Card>\r\n      <CardImg top src={dish.image} alt={dish.name} />\r\n      <CardBody>\r\n        <CardTitle>{dish.name}</CardTitle>\r\n        <CardText>{dish.description}</CardText>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst DishDetail = props => {\r\n  if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <RenderDish dish={props.dish} />\r\n          </div>\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <RenderComments comments={props.comments} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div />;\r\n  }\r\n};\r\n\r\nexport default DishDetail;\r\n","D:\\coursera\\react\\react\\confusion\\src\\components\\MainComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\FooterComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\HomeComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\components\\ContactComponent.js",["94"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n  Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleSubmit(values) {\r\n    console.log(\"Current state is: \" + JSON.stringify(values));\r\n    alert(\"Current state is: \" + JSON.stringify(values));\r\n   // event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem>\r\n                <Link to=\"/home\">Home</Link>\r\n              </BreadcrumbItem>\r\n              <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n              <h3>Contact Us</h3>\r\n              <hr />\r\n            </div>\r\n          </div>\r\n          <div className=\"row row-content\">\r\n            <div className=\"col-12\">\r\n              <h3>Location Information</h3>\r\n            </div>\r\n            <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n              <h5>Our Address</h5>\r\n              <address>\r\n                121, Clear Water Bay Road\r\n                <br />\r\n                Clear Water Bay, Kowloon\r\n                <br />\r\n                HONG KONG\r\n                <br />\r\n                <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n                <br />\r\n                <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n                <br />\r\n                <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n              </address>\r\n            </div>\r\n            <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n              <h5>Map of our Location</h5>\r\n            </div>\r\n            <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n              <div className=\"btn-group\" role=\"group\">\r\n                <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\">\r\n                  <i className=\"fa fa-phone\"></i> Call\r\n                </a>\r\n                <a role=\"button\" className=\"btn btn-info\">\r\n                  <i className=\"fa fa-skype\"></i> Skype\r\n                </a>\r\n                <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\">\r\n                  <i className=\"fa fa-envelope-o\"></i> Email\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h3>Send us Your Feedback</h3>\r\n            </div>\r\n            <div className=\"col-12 col-md-9\">\r\n            \r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.Text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                          required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                      }}\r\n                                         />\r\n                                      <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.Text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                          required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                      }}\r\n                                         />\r\n                                      <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.Text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                          required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                      }}\r\n                                         />\r\n                                          <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.Text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                          required, validEmail\r\n                                      }}\r\n                                        />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.Checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.Select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.Select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.Textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Contact;\r\n\r\n","D:\\coursera\\react\\react\\confusion\\src\\shared\\comments.js",[],"D:\\coursera\\react\\react\\confusion\\src\\shared\\promotions.js",[],"D:\\coursera\\react\\react\\confusion\\src\\shared\\leaders.js",[],["95","96"],"D:\\coursera\\react\\react\\confusion\\src\\components\\AboutComponent.js",[],"D:\\coursera\\react\\react\\confusion\\src\\redux\\configureStore.js",[],"D:\\coursera\\react\\react\\confusion\\src\\redux\\dishes.js",["97"],"import { actions } from 'react-redux-form';\r\nimport {DISHES} from '../shared/dishes';\r\n\r\nexport const Dishes=(state=DISHES,actions)=>{\r\n    switch (actions.type){\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\coursera\\react\\react\\confusion\\src\\redux\\comments.js",[],"D:\\coursera\\react\\react\\confusion\\src\\redux\\promotions.js",[],"D:\\coursera\\react\\react\\confusion\\src\\redux\\leaders.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":13,"column":3,"nodeType":"104","messageId":"105","endLine":13,"endColumn":6},{"ruleId":"102","severity":1,"message":"106","line":15,"column":3,"nodeType":"104","messageId":"105","endLine":15,"endColumn":6},{"ruleId":"107","severity":1,"message":"108","line":61,"column":17,"nodeType":"109","endLine":67,"endColumn":18},{"ruleId":"107","severity":1,"message":"110","line":77,"column":17,"nodeType":"109","endLine":88,"endColumn":19},{"ruleId":"107","severity":1,"message":"111","line":102,"column":17,"nodeType":"109","endLine":108,"endColumn":19},{"ruleId":"112","severity":1,"message":"113","line":72,"column":17,"nodeType":"109","endLine":72,"endColumn":59},{"ruleId":"98","replacedBy":"114"},{"ruleId":"100","replacedBy":"115"},{"ruleId":"102","severity":1,"message":"116","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":17},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["117"],["118"],"'actions' is defined but never used.","no-global-assign","no-unsafe-negation"]